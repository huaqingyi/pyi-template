{"version":3,"sources":["controllers/test.controller.ts"],"names":[],"mappings":"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","file":"../../controllers/test.controller.js","sourcesContent":["import {\n    Controller, RequestMapping, RequestMappingMethod,\n    PYIController, autowired, PYIExecption, PYIThrows,\n    Res, QueryParams, Body, Ctx\n} from 'pyi';\nimport { TestService } from '../services/test.service';\nimport { TestDto } from '../dto/test.dto';\nimport { Response, Context } from 'koa';\nimport { tags, request, summary, body, security } from 'pyi-swagger';\nimport send from 'koa-send';\nimport { join } from 'path';\nimport { LoginValidation } from '../validation/login.validation';\nimport { UserDto } from '../dto/user.info';\n\nconst tag = tags(['TestController']);\nconst userSchema = {\n    name: { type: 'string', required: true },\n    password: { type: 'string', required: true }\n};\n\n@Controller\nexport class TestController extends PYIController {\n\n    @autowired\n    public service!: TestService;\n\n    @RequestMapping({\n        prefix: '/resource/*'\n    })\n    public async resource(@Ctx() ctx: Context) {\n        this.dto = true;\n        return await send(ctx, ctx.path, { root: join(__dirname, '../') });\n    }\n\n    @RequestMapping({\n        prefix: '/favicon.ico'\n    })\n    public async favicon(@Ctx() ctx: Context) {\n        this.dto = true;\n        return await send(ctx, ctx.path, { root: join(__dirname, '../resource/static') });\n    }\n\n    @RequestMapping({\n        prefix: '/login',\n        methods: [RequestMappingMethod.POST]\n    })\n    @request(RequestMappingMethod.POST, '/login')\n    @summary('login user auth jwt .')\n    @body(LoginValidation.swaggerDocument)\n    @tag\n    public login(\n        @Body({ validate: true }) loginForm: LoginValidation,\n        @Res() response: Response,\n        @Ctx() ctx: Context\n    ): UserDto {\n        return PYIExecption(class extends TestController implements PYIThrows {\n            public errno!: number;\n            public errmsg!: string;\n            public async throws() {\n                const result = {\n                    id: 1,\n                    username: 'test',\n                    age: '1',\n                    nikename: 'test',\n                    email: 'test@email.com'\n                };\n                const { secret, token } = this.tokenConfig;\n                response.append('token', this.token.sign(result, secret, token));\n                return await result;\n            }\n        });\n    }\n\n    @RequestMapping({\n        prefix: '/'\n    })\n    @request(RequestMappingMethod.GET, '/')\n    @summary('test get index')\n    @tag\n    public index(): TestDto {\n        return PYIExecption(class extends TestController implements PYIThrows {\n            public errno!: number;\n            public errmsg!: string;\n            public async throws() {\n                return await 'Hello PYI ...';\n            }\n        });\n    }\n\n    @RequestMapping({\n        prefix: '/error'\n    })\n    public err(): TestDto {\n        return PYIExecption(class extends TestController implements PYIThrows {\n            public errno!: number;\n            public errmsg!: string;\n            public async throws() {\n                this.errno = 1000;\n                this.errmsg = 'test error ...';\n                throw new Error('test error');\n                return await 'Hello PYI ...';\n            }\n        });\n    }\n\n    @RequestMapping({\n        prefix: '/info',\n        methods: [RequestMappingMethod.POST]\n    })\n    @request(RequestMappingMethod.POST, '/info')\n    @security([{ api_key: [] }])\n    @summary('test token')\n    @tag\n    public info(\n        @Ctx() ctx: Context\n    ): UserDto {\n        return PYIExecption(class extends TestController implements PYIThrows {\n            public errno!: number;\n            public errmsg!: string;\n            public async throws() {\n                return ctx.state;\n            }\n        });\n    }\n\n    @RequestMapping({\n        prefix: '/test',\n        // methods: [RequestMappingMethod.GET]\n    })\n    public async test(\n        @QueryParams() gets: any\n    ) {\n        // console.log(await this.service.findAllUsers());\n        return await 'Hello World ...';\n    }\n}\n"]}